<?php

	# INKLUDERA
	require '../../../properties.php';



	# KONTROLL: Koordinaterna existerar inte
	if(empty($_GET['latitude']) AND empty($_GET['longitude'])) {

		echo '<div class="loading loading-error">';
			echo 'Koordinaterna för dina aktuella position kunde inte hittas. Var god ladda om sidan och försök igen';
		echo '</div>';


	# KONTROLL: Inga fel hittades
	} else {

	# KONTROLL: Solupp/nedgång och månupp/nedgång existerar inte
	if(@simplexml_load_file('http://api.yr.no/weatherapi/sunrise/1.0/?lat='.$_GET['latitude'].';lon='.$_GET['longitude'].';date='.date('Y-m-d'))) {

		# INSTÄLLNINGAR: Längden på vänstertabellen
		$table_left_width = 140;
		$table_right_width = 160;

		# XML: Hämta väderprognosen
		$weather_forecast = simplexml_load_file('http://api.yr.no/weatherapi/locationforecast/1.8/?lat='.$_GET['latitude'].';lon='.$_GET['longitude']);
		$weather_sun = simplexml_load_file('http://api.yr.no/weatherapi/sunrise/1.0/?lat='.$_GET['latitude'].';lon='.$_GET['longitude'].';date='.date('Y-m-d'));

		# KONFIGURATION: Hämta XML-data från Google TimeZone API
		$timezone = simplexml_load_file('https://maps.googleapis.com/maps/api/timezone/xml?location='.$_GET['latitude'].','.$_GET['longitude'].'&timestamp=1331161200&sensor=false');

		# VÄDERINFORMATION
		$temperature = $weather_forecast->product->time->location->temperature['value'];
		$temperature_unit = $weather_forecast->product->time->location->temperature['unit'];
		$wind_direction = $weather_forecast->product->time->location->windDirection['name'];
		$wind_direction_degrees = $weather_forecast->product->time->location->windDirection['deg'];
		$wind_speed = $weather_forecast->product->time->location->windSpeed['mps'];
		$cloudiness = $weather_forecast->product->time->location->cloudiness['percent'];
		$fog = $weather_forecast->product->time->location->fog['percent'];
		$precipitation = $weather_forecast->product->time[3]->location->precipitation['value'];
		$precipitation_unit = $weather_forecast->product->time[3]->location->precipitation['unit'];
		$precipitation_from = gmdate('H:i', strtotime($weather_forecast->product->time[3]->attributes()->from));
		$precipitation_to = gmdate('H:i', strtotime($weather_forecast->product->time[3]->attributes()->to));
		$precipitation_max = (string)$weather_forecast->product->time[3]->location->precipitation['maxvalue'];
		$precipitation_min = (string)$weather_forecast->product->time[3]->location->precipitation['minvalue'];
		$weather_symbol = $weather_forecast->product->time[3]->location->symbol['number'];
		$weather_symbol_name = $weather_forecast->product->time[3]->location->symbol['id'];

		$pressure = format_number((string)$weather_forecast->product->time->location->pressure['value'], 1);
		$pressure_db = $weather_forecast->product->time->location->pressure['value'];
		$pressure_unit = $weather_forecast->product->time->location->pressure['unit'];
		$humidity = format_number((string)$weather_forecast->product->time->location->humidity['value'], 1);
		$humidity_db = $weather_forecast->product->time->location->humidity['value'];
		$humidity_unit = $weather_forecast->product->time->location->humidity['unit'];
		$moon_phase = $weather_sun->time->location->moon['phase'];
		$moonrise = date('H:i', strtotime($weather_sun->time->location->moon['rise'].' +'.($timezone->raw_offset / 3600 -1).' hour'));
		$moonset = date('H:i', strtotime($weather_sun->time->location->moon['set'].' +'.($timezone->raw_offset / 3600 -1).' hour'));
		$sunrise = date('H:i', strtotime($weather_sun->time->location->sun['rise'].' +'.($timezone->raw_offset / 3600 -1).' hour'));
		$sunset = date('H:i', strtotime($weather_sun->time->location->sun['set'].' +'.($timezone->raw_offset / 3600 -1).' hour'));
		$local_time = date('H:i', strtotime(($timezone->raw_offset / 3600 -1).' hours'));

		$accuracy = isset($_GET['accuracy']) ? format_number($_GET['accuracy']).' meter' : '';
		$direction = isset($_GET['heading']) ? ($_GET['heading'] == 0 ? '<span class="color-grey">0°</span>' : format_number($_GET['heading']).'°') : '';
		$speed = isset($_GET['speed']) ? ($_GET['speed'] == 0 ? '<span class="color-grey">0 km/h</span>' : format_number($_GET['speed']).' km/h') : '';
		$distance = isset($_GET['distance']) ? format_number($_GET['distance'], 1).' kilometer' : '';

		# XML: Hämta höjden över eller under havsytan
		$elevation = simplexml_load_file('http://maps.googleapis.com/maps/api/elevation/xml?sensor=false&locations='.$_GET['latitude'].','.$_GET['longitude']);

		$cloudiness_array = explode('.', $cloudiness);
		$wind_direction_degrees_array = explode('.', $wind_direction_degrees);
		$wind_speed_array = explode('.', $wind_speed);
		$fog_array = explode('.', $fog);

		# VÄDERLEK
		$weather_type_array = Array('LIGHTCLOUD' => 'Lätt molnighet',
									'PARTLYCLOUD' => 'Delvis molnighet',
									'CLOUD' => 'Molnigt',
									'LIGHTRAINSUN' => 'Delvis klart med lätt regn',
									'LIGHTRAINTHUNDERSUN' => 'Delvis klart med lätt regn och åska',
									'SLEETSUN' => 'Delvis klart med snöblandat regn',
									'SNOWSUN' => 'Snö med sol',
									'LIGHTRAIN' => 'Lätt regn',
									'RAIN' => 'Regn',
									'RAINTHUNDER' => 'Åska',
									'SLEET' => 'Snöblandat',
									'SNOW' => 'Snö',
									'SNOWTHUNDER' => 'Snö med åska',
									'FOG' => 'Dimma',
									'SUN' => 'Klart',
									'SLEETSTUNTHUNDER' => 'Delvis klart med snöblandat regn och åska',
									'SNOWSUNTHUNDER' => 'Delvis klart med snö och åska',
									'LIGHTRAINTHUNDER' => 'Lätt regn med åska',
									'SLEETTHUNDER' => 'Snöblandat med regn och åska');



		/** ** ** ** ** **/



	# KONTROLL
	if(!isset($_GET['history'])) {

		# KONTROLL
		if(isset($_GET['t'])) {

			# DATABAS (kontroll)
			$coordinates_exists = sql("SELECT COUNT(*)
									   FROM coordinates
									   WHERE data_coordinates = :coordinates
									   AND data_temperature = :temperature
									   AND data_pressure = :pressure
									   AND data_humidity = :humidity
									   AND data_weather = :weather
									   AND data_cloudiness = :cloudiness
									   AND data_fog = :fog
									   AND data_wind_speed = :wind_speed
									   AND data_wind_compass = :wind_compass
									   AND data_wind_degrees = :wind_degrees

									  ", Array('coordinates' => $_GET['latitude'].','.$_GET['longitude'],
											   'temperature' => $temperature,
											   'pressure' => $pressure_db,
											   'humidity' => $humidity_db,
											   'weather' => $weather_symbol_name,
											   'cloudiness' => $cloudiness,
											   'fog' => $fog,
											   'wind_speed' => $wind_speed,
											   'wind_compass' => $wind_direction,
											   'wind_degrees' => $wind_direction_degrees), 'count');



			# KONTROLL: Koordinaterna och väderprognosen existerar inte
			if(!isset($_GET['nolog']) AND $coordinates_exists == 0) {

				# DATABAS (lägg till)
				sql_il("INSERT INTO coordinates(id_user,
												id_symbol,
												data_coordinates,
												data_temperature,
												data_temperature_unit,
												data_accuracy,
												data_altitude,
												data_heading,
												data_speed,
												data_address,
												data_pressure,
												data_pressure_unit,
												data_humidity,
												data_humidity_unit,
												data_moonphase,
												data_moonrise,
												data_moonset,
												data_sunrise,
												data_sunset,
												data_localtime,
												data_weather,
												data_cloudiness,
												data_fog,
												data_wind_speed,
												data_wind_compass,
												data_wind_degrees,
												data_precipitation,
												data_precipitation_max,
												data_precipitation_min,
												data_precipitation_from,
												data_precipitation_to,
												data_precipitation_unit,
												timestamp_found)

						VALUES(:iduser,
							   :idsymbol,
							   :coordinates,
							   :temperature,
							   :temperature_unit,
							   :accuracy,
							   :altitude,
							   :heading,
							   :speed,
							   :address,
							   :pressure,
							   :pressure_unit,
							   :humidity,
							   :humidity_unit,
							   :moonphase,
							   :moonrise,
							   :moonset,
							   :sunrise,
							   :sunset,
							   :localtime,
							   :weather,
							   :cloudiness,
							   :fog,
							   :wind_speed,
							   :wind_compass,
							   :wind_degrees,
							   :precipitation,
							   :precipitation_max,
							   :precipitation_min,
							   :precipitation_from,
							   :precipitation_to,
							   :precipitation_unit,
							   :found)


					   ", Array('iduser' => '0',
								'idsymbol' => $weather_symbol,
								'coordinates' => $_GET['latitude'].','.$_GET['longitude'],
								'temperature' => $temperature,
								'temperature_unit' => $temperature_unit,
								'accuracy' => ((isset($_GET['t']) AND $_GET['t'] == 'coordinates') ? '' : $_GET['accuracy']),
								'altitude' => ((isset($_GET['t']) AND $_GET['t'] == 'coordinates') ? '' : $_GET['altitude']),
								'heading' => ((isset($_GET['t']) AND $_GET['t'] == 'coordinates') ? '' : $_GET['heading']),
								'speed' => ((isset($_GET['t']) AND $_GET['t'] == 'coordinates') ? '' : $_GET['speed']),
								'address' => $_GET['address'],
								'pressure' => $pressure_db,
								'pressure_unit' => $pressure_unit,
								'humidity' => $humidity_db,
								'humidity_unit' => $humidity_unit,
								'moonphase' => $moon_phase,
								'moonrise' => $moonrise,
								'moonset' => $moonset,
								'sunrise' => $sunrise,
								'sunset' => $sunset,
								'localtime' => $local_time,
								'weather' => $weather_symbol_name,
								'cloudiness' => $cloudiness,
								'fog' => $fog,
								'wind_speed' => $wind_speed,
								'wind_compass' => $wind_direction,
								'wind_degrees' => $wind_direction_degrees,
								'precipitation' => $precipitation,
								'precipitation_max' => $precipitation_max,
								'precipitation_min' => $precipitation_min,
								'precipitation_from' => $precipitation_from,
								'precipitation_to' => $precipitation_to,
								'precipitation_unit' => $precipitation_unit,
								'found' => ((isset($_GET['t']) AND $_GET['t'] == 'coordinates') ? time() : domtimestamp_to_timestamp($_GET['timestamp']))));

			}

		}








	# KONTROLL
	} else {


		# DATABAS (hämta)
		$history = sql("SELECT *
						FROM coordinates
						WHERE data_coordinates = :coordinates
						AND timestamp_found = :found
					   ", Array('coordinates' => $_GET['latitude'].','.$_GET['longitude'],
								'found' => $_GET['history']), 'fetch');


		# VÄDERINFORMATION
		$temperature = $history['data_temperature'];
		$temperature_unit = $history['data_temperature_unit'];
		$wind_direction = $history['data_wind_compass'];
		$wind_direction_degrees = $history['data_wind_degrees'];
		$wind_speed = $history['data_wind_speed'];
		$cloudiness = $history['data_cloudiness'];
		$fog = $history['data_fog'];
		$precipitation = $history['data_precipitation'];
		$precipitation_unit = $history['data_precipitation_unit'];
		$precipitation_from = date('H:i', strtotime($history['data_precipitation_from']));
		$precipitation_to = date('H:i', strtotime($history['data_precipitation_to']));
		$precipitation_max = format_number($history['data_precipitation_max'], 1);
		$precipitation_min = format_number($history['data_precipitation_min'], 1);
		$weather_symbol = $history['id_symbol'];
		$weather_symbol_name = $history['data_weather'];

		$pressure = format_number($history['data_pressure'], 1);
		$pressure_unit = $history['data_pressure_unit'];
		$humidity = format_number($history['data_humidity'], 1);
		$humidity_unit = $history['data_humidity_unit'];
		$moon_phase = $history['data_moonphase'];
		$moonrise = date('H:i', strtotime($history['data_moonrise']));
		$moonset = date('H:i', strtotime($history['data_moonset']));
		$sunrise = date('H:i', strtotime($history['data_sunrise']));
		$sunset = date('H:i', strtotime($history['data_sunset']));
		$local_time = date('H:i', strtotime($history['data_localtime']));


	}



		/** ** ** ** ** **/



		# TEMPERATUR-LOOP
		$i = 1;
		$data = Array();

		foreach($weather_forecast->product->time AS $temploop) {
			if((string)$temploop['from'] == (string)$temploop['to']) {
				$data[] = $temploop->location->temperature['value'];
				if($i++ == 25) break;
			}
		}



		/** ** ** ** ** **/



		# LOOP
		foreach($weather_forecast->product->time AS $forecast) {

			# KONTROLL: 3 timmar
			if(date('d H', strtotime((string)$forecast['from'])) == date('d H', strtotime('+3 hours'))) {
				$weather_symbol_3h = $forecast->location->symbol['number'];
				$weather_symbol_name_3h = $forecast->location->symbol['id'];

				if(date('H', strtotime('+3 hours')) >= 22 OR date('H', strtotime('+3 hours')) <= 7) {
					$weather_symbol_isnight_3h = 1;
				} else {
					$weather_symbol_isnight_3h = 0;
				}
			}


			# KONTROLL: 6 timmar
			if(date('d H', strtotime((string)$forecast['from'])) == date('d H', strtotime('+6 hours'))) {
				$weather_symbol_6h = $forecast->location->symbol['number'];
				$weather_symbol_name_6h = $forecast->location->symbol['id'];

				if(date('H', strtotime('+6 hours')) >= 22 OR date('H', strtotime('+6 hours')) <= 7) {
					$weather_symbol_isnight_6h = 1;
				} else {
					$weather_symbol_isnight_6h = 0;
				}
			}


			# KONTROLL: 9 timmar
			if(date('d H', strtotime((string)$forecast['from'])) == date('d H', strtotime('+9 hours'))) {
				$weather_symbol_9h = $forecast->location->symbol['number'];
				$weather_symbol_name_9h = $forecast->location->symbol['id'];

				if(date('H', strtotime('+9 hours')) >= 22 OR date('H', strtotime('+9 hours')) <= 7) {
					$weather_symbol_isnight_9h = 1;
				} else {
					$weather_symbol_isnight_9h = 0;
				}
			}


			# KONTROLL: 12 timmar
			if(date('d H', strtotime((string)$forecast['from'])) == date('d H', strtotime('+12 hours'))) {
				$weather_symbol_12h = $forecast->location->symbol['number'];
				$weather_symbol_name_12h = $forecast->location->symbol['id'];

				if(date('H', strtotime('+12 hours')) >= 22 OR date('H', strtotime('+12 hours')) <= 7) {
					$weather_symbol_isnight_12h = 1;
				} else {
					$weather_symbol_isnight_12h = 0;
				}
			}


			# KONTROLL: 15 timmar
			if(date('d H', strtotime((string)$forecast['from'])) == date('d H', strtotime('+15 hours'))) {
				$weather_symbol_15h = $forecast->location->symbol['number'];
				$weather_symbol_name_15h = $forecast->location->symbol['id'];

				if(date('H', strtotime('+15 hours')) >= 22 OR date('H', strtotime('+15 hours')) <= 7) {
					$weather_symbol_isnight_15h = 1;
				} else {
					$weather_symbol_isnight_15h = 0;
				}
			}


			# KONTROLL: 18 timmar
			if(date('d H', strtotime((string)$forecast['from'])) == date('d H', strtotime('+18 hours'))) {
				$weather_symbol_18h = $forecast->location->symbol['number'];
				$weather_symbol_name_18h = $forecast->location->symbol['id'];

				if(date('H', strtotime('+18 hours')) >= 22 OR date('H', strtotime('+18 hours')) <= 7) {
					$weather_symbol_isnight_18h = 1;
				} else {
					$weather_symbol_isnight_18h = 0;
				}
			}


			# KONTROLL: 21 timmar
			if(date('d H', strtotime((string)$forecast['from'])) == date('d H', strtotime('+21 hours'))) {
				$weather_symbol_21h = $forecast->location->symbol['number'];
				$weather_symbol_name_21h = $forecast->location->symbol['id'];

				if(date('H', strtotime('+21 hours')) >= 22 OR date('H', strtotime('+21 hours')) <= 7) {
					$weather_symbol_isnight_21h = 1;
				} else {
					$weather_symbol_isnight_21h = 0;
				}
			}


			# KONTROLL: 24 timmar
			if(date('d H', strtotime((string)$forecast['from'])) == date('d H', strtotime('+24 hours'))) {
				$weather_symbol_24h = $forecast->location->symbol['number'];
				$weather_symbol_name_24h = $forecast->location->symbol['id'];

				if(date('H', strtotime('+24 hours')) >= 22 OR date('H', strtotime('+24 hours')) <= 7) {
					$weather_symbol_isnight_24h = 1;
				} else {
					$weather_symbol_isnight_24h = 0;
				}
			}

		}



		/** ** ** ** ** **/



		# VÄDERIKON
		if($weather_symbol_name != '') {
			echo '<div class="weather-icon-image-temperature" style="background-image: url(http://api.yr.no/weatherapi/weathericon/1.0/?symbol='.$weather_symbol.';is_night=0;content_type=image/png);" title="'.$weather_type_array["$weather_symbol_name"].'"></div>';
		}

		# TEMPERATUR
		# echo '<div class="temperature-background" style="background-image: url('.url(FOLDER_WEATHER.'/'.$weather_symbol_name.'.jpg').');"></div>';
		echo '<div class="temperature-background" style="background-image: url('.url(FOLDER_WEATHER.'/NORMAL.jpg').');"></div>';
		echo '<div class="temperature" style="color: #'.temperature_color($temperature).';">';
			echo temp($temperature, $temperature_unit);
		echo '</div>';



		/** ** ** ** **/



		# INFORMATION
		echo '<div class="weather-information">';

			# INFORMATION: Vänsterpanelen
			echo '<div class="weather-information-left">';

				# INFORMATION: Vind
				echo '<div class="weather-information-wind-image" title="Vindriktning och vindhastighet"></div>';
				echo '<div class="weather-information-wind">';
					echo wind_degress($wind_direction, 'text', '').'<br>';

					echo $wind_direction_degrees_array[0] . ($wind_direction_degrees_array[1] == 0 ? '' : ','.$wind_direction_degrees_array[1]).'<a href="http://sv.wikipedia.org/wiki/Gradtecken_(symbol)" target="_blank" title="Öppnas i en ny flik" class="temperature-link">°</a>';
					echo '<div class="space space-small"></div>';
					echo $wind_speed_array[0] . ($wind_speed_array[1] == 0 ? '' : ','.$wind_speed_array[1]).' <span title="Meter per sekund">mps</span>';
				echo '</div>';

				# ÖVRIGT: Ny rad
				echo '<br>';


				# INFORMATION: Molnighet
				echo '<div class="weather-information-clouds-image" title="Molnighet"></div>';
				echo '<div class="weather-information-clouds">';
					echo $cloudiness_array[0] . ($cloudiness_array[1] == 0 ? '' : ','.$cloudiness_array[1]).'%';
				echo '</div>';
			echo '</div>';




			# INFORMATION: Högerpanelen
			echo '<div class="weather-information-right">';

				# INFORMATION: Dimmtäcke
				echo '<div class="weather-information-fog-image" title="Dimmtäcke"></div>';
				echo '<div class="weather-information-fog">';
					echo str_replace('-', '', $fog_array[0]) . ($fog_array[1] == 0 ? '' : ','.$fog_array[1]).'%';
				echo '</div>';

				# ÖVRIGT: Ny rad
				echo '<br>';


				# INFORMATION: Nederbörd
				if($precipitation_max == '' AND $precipitation_min == '') {
					echo '<div class="weather-information-precipitation-image-undefined" title="Nederbörd"></div>';
					echo '<div class="weather-information-precipitation color-grey">';
						echo 'Data hittades inte';
					echo '</div>';
				} else {
					echo '<div class="weather-information-precipitation-image" title="Nederbörd"></div>';
					echo '<div class="weather-information-precipitation">';
						echo $precipitation_from.' - '.$precipitation_to.'<br>';
						echo 'Max '.format_number($precipitation_max, 1).' '.$precipitation_unit.', ';
						echo 'minst '.format_number($precipitation_min, 1).' '.$precipitation_unit;
					echo '</div>';
				}

			echo '</div>';

		echo '</div>';



		/** ** ** ** **/



		# GOOGLE MAPS IMAGE
		echo '<div class="google-maps-image" data="'.$_GET['latitude'].','.$_GET['longitude'].'" style="background-image: url(http://maps.googleapis.com/maps/api/staticmap?center='.$_GET['latitude'].','.$_GET['longitude'].'&zoom=5&scale=1&size=680x150&maptype=roadmap&markers='.$_GET['latitude'].','.$_GET['longitude'].'&sensor=false);" title="Öppna i Google Maps"></div>';



		/** ** ** ** **/



		# INFORMATION
		echo '<div class="weather-information-table">';
			echo '<div class="weather-information-table-left">';

				# TABELL
				echo '<div class="table">';

					# TABELL: Känns som
					echo '<div class="table-row">';
						echo '<div class="table-cell-left table-cell-left-weather" style="width: '.$table_left_width.'px;">';
							echo 'Känns som';
						echo '</div>';

						echo '<div class="table-cell-right">';
							echo '...';
						echo '</div>';
					echo '</div>';


					# TABELL: Lufttryck
					echo '<div class="table-row">';
						echo '<div class="table-cell-left table-cell-left-weather" style="width: '.$table_left_width.'px;">';
							echo 'Lufttryck';
						echo '</div>';

						echo '<div class="table-cell-right">';
							echo $pressure.' <a href="http://sv.wikipedia.org/wiki/HPa" target="_blank" title="Öppnas i en ny flik">'.$pressure_unit.'</a>';
						echo '</div>';
					echo '</div>';


					# TABELL: Luftfuktighet
					echo '<div class="table-row">';
						echo '<div class="table-cell-left table-cell-left-weather" style="width: '.$table_left_width.'px;">';
							echo 'Luftfuktighet';
						echo '</div>';

						echo '<div class="table-cell-right">';
							echo $humidity . ($humidity_unit == 'percent' ? '%' : $humidity_unit);
						echo '</div>';
					echo '</div>';


					# TABELL: Månfas
					echo '<div class="table-row">';
						echo '<div class="table-cell-left table-cell-left-weather" style="width: '.$table_left_width.'px;">';
							echo 'Månfas';
						echo '</div>';

						echo '<div class="table-cell-right">';
							echo moonphase($moon_phase);
						echo '</div>';
					echo '</div>';


					# TABELL: Månupp/nedgång
					echo '<div class="table-row">';
						echo '<div class="table-cell-left table-cell-left-weather" style="width: '.$table_left_width.'px;">';
							echo 'Månupp/nedgång';
						echo '</div>';

						echo '<div class="table-cell-right">';
							echo $moonrise;
							echo '<div class="space space-small">/</div>';
							echo $moonset;
						echo '</div>';
					echo '</div>';


					# TABELL: Solupp/nedgång
					echo '<div class="table-row">';
						echo '<div class="table-cell-left table-cell-left-weather" style="width: '.$table_left_width.'px;">';
							echo 'Solupp/nedgång';
						echo '</div>';

						echo '<div class="table-cell-right">';
							echo $sunrise;
							echo '<div class="space space-small">/</div>';
							echo $sunset;
						echo '</div>';
					echo '</div>';


					# TABELL: Lokal tid
					echo '<div class="table-row">';
						echo '<div class="table-cell-left table-cell-left-weather" style="width: '.$table_left_width.'px;">';
							echo 'Lokal tid';
						echo '</div>';

						echo '<div class="table-cell-right">';
							echo $local_time;
						echo '</div>';
					echo '</div>';

				echo '</div>';

			echo '</div>';





			echo '<div class="weather-information-table-right">';

				# TABELL
				echo '<div class="table">';

					# TABELL: Hittade dig
					echo '<div class="table-row">';
						echo '<div class="table-cell-left table-cell-left-weather" style="width: '.$table_right_width.'px;">';
							echo 'Hittade dig';
						echo '</div>';

						echo '<div class="table-cell-right">';
							echo (isset($_GET['t']) AND $_GET['t'] == 'gps') ? domtimestamp_to_datetime($_GET['timestamp']) : '<span class="color-grey">Endast för GPS</span>';
						echo '</div>';
					echo '</div>';


					# TABELL: Status
					echo '<div class="table-row">';
						echo '<div class="table-cell-left table-cell-left-weather" style="width: '.$table_right_width.'px;">';
							echo 'Status';
						echo '</div>';

						echo '<div class="table-cell-right">';
							if($coordinates_exists == 0) {
								echo help('Sparat', 'coordinates-saved');

							} else {
								echo help('Inte sparat', 'coordinates-not-saved');
							}
						echo '</div>';
					echo '</div>';


					# TABELL: Noggrannhet
					echo '<div class="table-row">';
						echo '<div class="table-cell-left table-cell-left-weather" style="width: '.$table_right_width.'px;">';
							echo 'Noggrannhet';
						echo '</div>';

						echo '<div class="table-cell-right">';
							echo (isset($_GET['t']) AND $_GET['t'] == 'gps') ? $accuracy : '<span class="color-grey">Endast för GPS</span>';
						echo '</div>';
					echo '</div>';


					# TABELL: Höjd under vattenytan
					echo '<div class="table-row">';
						echo '<div class="table-cell-left table-cell-left-weather" style="width: '.$table_right_width.'px;">';
							echo 'Höjd '.(strpos((string)$elevation->result->elevation, '-') !== false ? 'under' : 'över').' vattenytan';
						echo '</div>';

						echo '<div class="table-cell-right">';
							echo format_number(str_replace('-', '', (string)$elevation->result->elevation), 1).' meter';
						echo '</div>';
					echo '</div>';


					# TABELL: Färdriktnin
					echo '<div class="table-row">';
						echo '<div class="table-cell-left table-cell-left-weather" style="width: '.$table_right_width.'px;">';
							echo 'Färdriktning';
						echo '</div>';

						echo '<div class="table-cell-right">';
							echo (isset($_GET['t']) AND $_GET['t'] == 'gps') ? $direction : '<span class="color-grey">Endast för GPS</span>';
						echo '</div>';
					echo '</div>';


					# TABELL: Färdhastighet
					echo '<div class="table-row">';
						echo '<div class="table-cell-left table-cell-left-weather" style="width: '.$table_right_width.'px;">';
							echo 'Färdhastighet';
						echo '</div>';

						echo '<div class="table-cell-right">';
							echo (isset($_GET['t']) AND $_GET['t'] == 'gps') ? $speed : '<span class="color-grey">Endast för GPS</span>';
						echo '</div>';
					echo '</div>';


					# TABELL: Total färdsträcka
					echo '<div class="table-row">';
						echo '<div class="table-cell-left table-cell-left-weather" style="width: '.$table_right_width.'px;">';
							echo 'Total färdsträcka';
						echo '</div>';

						echo '<div class="table-cell-right">';
							echo (isset($_GET['t']) AND $_GET['t'] == 'gps') ? $distance : '<span class="color-grey">Endast för GPS</span>';
						echo '</div>';
					echo '</div>';

				echo '</div>';

			echo '</div>';
		echo '</div>';



		/** ** ** ** **/



		# DIAGRAM
		echo '<div class="weather-chart"></div>';



		/** ** ** ** **/



		# VÄDRET OM 6, 12, 18 OCH 24 TIMMAR
		echo '<div class="weather-future">';
			if($weather_type_array["$weather_symbol_name_3h"] == '' AND
			   $weather_type_array["$weather_symbol_name_6h"] == '' AND
			   $weather_type_array["$weather_symbol_name_9h"] == '' AND
			   $weather_type_array["$weather_symbol_name_12h"] == '' AND
			   $weather_type_array["$weather_symbol_name_15h"] == '' AND
			   $weather_type_array["$weather_symbol_name_18h"] == '' AND
			   $weather_type_array["$weather_symbol_name_21h"] == '' AND
			   $weather_type_array["$weather_symbol_name_24h"] == '') {

				echo '<div class="color-grey">';
					echo 'Kunde inte hitta vädret';
				echo '</div>';

			} else {


				# 3 TIMMAR
				echo '<div class="weather-future-symbol">';
					echo '<div class="weather-future-head">';
						echo date('H', strtotime('+3 hours')).':00';
					echo '</div>';

					echo '<div class="weather-future-container">';
						if($weather_type_array["$weather_symbol_name_3h"] != '') {
							echo '<div class="weather-icon-image" style="background-image: url(http://api.yr.no/weatherapi/weathericon/1.0/?symbol='.$weather_symbol_3h.';is_night='.$weather_symbol_isnight_3h.';content_type=image/png);" title="'.$weather_type_array["$weather_symbol_name_3h"].'"></div>';
						} else {
							echo '<span class="color-grey">';
								echo 'Data hittades inte';
							echo '</span>';
						}
					echo '</div>';
				echo '</div>';



				# 6 TIMMAR
				echo '<div class="weather-future-symbol">';
					echo '<div class="weather-future-head">';
						echo date('H', strtotime('+6 hours')).':00';
					echo '</div>';

					echo '<div class="weather-future-container">';
						if($weather_type_array["$weather_symbol_name_6h"] != '') {
							echo '<div class="weather-icon-image" style="background-image: url(http://api.yr.no/weatherapi/weathericon/1.0/?symbol='.$weather_symbol_6h.';is_night='.$weather_symbol_isnight_6h.';content_type=image/png);" title="'.$weather_type_array["$weather_symbol_name_6h"].'"></div>';
						}
					echo '</div>';
				echo '</div>';



				# 9 TIMMAR
				echo '<div class="weather-future-symbol">';
					echo '<div class="weather-future-head">';
						echo date('H', strtotime('+9 hours')).':00';
					echo '</div>';

					echo '<div class="weather-future-container">';
						if($weather_type_array["$weather_symbol_name_9h"] != '') {
							echo '<div class="weather-icon-image" style="background-image: url(http://api.yr.no/weatherapi/weathericon/1.0/?symbol='.$weather_symbol_9h.';is_night='.$weather_symbol_isnight_9h.';content_type=image/png);" title="'.$weather_type_array["$weather_symbol_name_9h"].'"></div>';
						}
					echo '</div>';
				echo '</div>';



				# 12 TIMMAR
				echo '<div class="weather-future-symbol">';
					echo '<div class="weather-future-head">';
						echo date('H', strtotime('+12 hours')).':00';
					echo '</div>';

					echo '<div class="weather-future-container">';
						if($weather_type_array["$weather_symbol_name_12h"] != '') {
							echo '<div class="weather-icon-image" style="background-image: url(http://api.yr.no/weatherapi/weathericon/1.0/?symbol='.$weather_symbol_12h.';is_night='.$weather_symbol_isnight_12h.';content_type=image/png);" title="'.$weather_type_array["$weather_symbol_name_12h"].'"></div>';
						}
					echo '</div>';
				echo '</div>';



				# 15 TIMMAR
				echo '<div class="weather-future-symbol">';
					echo '<div class="weather-future-head">';
						echo date('H', strtotime('+15 hours')).':00';
					echo '</div>';

					echo '<div class="weather-future-container">';
						if($weather_type_array["$weather_symbol_name_15h"] != '') {
							echo '<div class="weather-icon-image" style="background-image: url(http://api.yr.no/weatherapi/weathericon/1.0/?symbol='.$weather_symbol_15h.';is_night='.$weather_symbol_isnight_15h.';content_type=image/png);" title="'.$weather_type_array["$weather_symbol_name_15h"].'"></div>';
						}
					echo '</div>';
				echo '</div>';



				# 18 TIMMAR
				echo '<div class="weather-future-symbol">';
					echo '<div class="weather-future-head">';
						echo date('H', strtotime('+18 hours')).':00';
					echo '</div>';

					echo '<div class="weather-future-container">';
						if($weather_type_array["$weather_symbol_name_18h"] != '') {
							echo '<div class="weather-icon-image" style="background-image: url(http://api.yr.no/weatherapi/weathericon/1.0/?symbol='.$weather_symbol_18h.';is_night='.$weather_symbol_isnight_18h.';content_type=image/png);" title="'.$weather_type_array["$weather_symbol_name_18h"].'"></div>';
						}
					echo '</div>';
				echo '</div>';



				# 21 TIMMAR
				echo '<div class="weather-future-symbol">';
					echo '<div class="weather-future-head">';
						echo date('H', strtotime('+21 hours')).':00';
					echo '</div>';

					echo '<div class="weather-future-container">';
						if($weather_type_array["$weather_symbol_name_21h"] != '') {
							echo '<div class="weather-icon-image" style="background-image: url(http://api.yr.no/weatherapi/weathericon/1.0/?symbol='.$weather_symbol_21h.';is_night='.$weather_symbol_isnight_21h.';content_type=image/png);" title="'.$weather_type_array["$weather_symbol_name_21h"].'"></div>';
						}
					echo '</div>';
				echo '</div>';



				# 24 TIMMAR
				echo '<div class="weather-future-symbol">';
					echo '<div class="weather-future-head">';
						echo date('H', strtotime('+24 hours')).':00';
					echo '</div>';

					echo '<div class="weather-future-container">';
						if($weather_type_array["$weather_symbol_name_24h"] != '') {
							echo '<div class="weather-icon-image" style="background-image: url(http://api.yr.no/weatherapi/weathericon/1.0/?symbol='.$weather_symbol_24h.';is_night='.$weather_symbol_isnight_24h.';content_type=image/png);" title="'.$weather_type_array["$weather_symbol_name_24h"].'"></div>';
						}
					echo '</div>';
				echo '</div>';


			}
		echo '</div>';



	} else {

		echo '<div class="loading loading-error">';
			echo 'Kunde inte hitta solupp/nedgångs- och månupp/nedgångs-data. Var god ladda om sidan och försök igen';
		echo '</div>';

	}

?>









<script type="text/javascript">
$(document).ready(function() {


	$('body').on('click', '.google-maps-image', function() {
		var coordinates = $(this).attr('data');
		new_tab('https://www.google.se/maps/place/' + coordinates + '/@' + coordinates + ',3000m/data=!3m1!1e3');
	});


	// TID SEDAN
	$('.timeago').timeago();

	// HÄMTA
	$.ajax({
		url: folder_name + '/get/weather/chart/temperature/24-hours',
		type: ajax_type_get,
		data: 'p=<?php echo implode(",", $data); ?>',

		beforeSend: function(b) {
			$(class_weather_chart).html(message_loading_chart);
		},

		success: function(s) {
			$(class_weather_chart).html(s);
		},

		error: function(e) {
			$(class_weather_chart).html(message_error_page);
		}
	});


});
</script>









<?php } ?>